///
/// Aesthetic constants
///
$color-white:       #FFF;
$color-light-gray:  #F8F8F8;
$color-mid-gray:    #D3D3D3;
$color-gray:        #636363;
$color-green:       #29b765;
$color-red:         #ED7669;
$color-blue:        #3498DB;

$font-monospace:    "SFMono-Regular", "Source Code Pro", monospace;
$font-sans-serif:   "Roboto", "Source Sans Pro", sans-serif;
$font-size-global:  16px;
$font-size-large:   1.5rem;

$border-radius:     3px;
$shadow-blur:       16px;
$button-size:       32px;


///
/// Layout constants
///
$margin-app:        64px;
$padding-thick:     32px;
$padding-medium:    16px;
$padding-thin:      8px;
$cm-padding:        4px;

///
/// App styles
///
html, body {
  font-family: $font-sans-serif;
  font-size: $font-size-global;
}

.CodeMirror {
  background-color: transparent;
  font-family: $font-monospace;
}

.grabbing-cursor,
.grabbing-cursor * {
  cursor: -webkit-grabbing !important;
  cursor: -moz-grabbing !important;
  cursor: grabbing !important;
}

.app {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.action {
  width: $button-size;
  height: $button-size;
  border-style: none;
  font-size: $font-size-large;
  font-family: $font-monospace;
  color: white;
  border-radius: $border-radius;
  background-color: $color-mid-gray;
  transition: background-color .2s;
  cursor: pointer;

  &.arrow {
    position: relative;

    &::before {
      content: "";
      width: 10px;
      height: 10px;
      position: absolute;
      top: -5px;
      left: 11px;
      display: block;
      background-color: inherit;
      transform: rotate(45deg);
    }
  }

  &:hover {
    background-color: darken($color-mid-gray, 10%);
  }

  &:focus {
    outline: none;
  }

  &:disabled {
    cursor: auto;
  }

  &[data-color="red"] {
    background-color: $color-red;

    &:hover {
      background-color: darken($color-red, 20%);
    }
  }

  &[data-color="green"] {
    background-color: $color-green;

    &:hover {
      background-color: darken($color-green, 10%);
    }
  }

  &[data-color="blue"] {
    background-color: $color-blue;

    &:hover {
      background-color: darken($color-blue, 10%);
    }

    &:disabled {
      background-color: lighten($color-blue, 20%);
    }
  }
}

.regex-editor {
  min-height: 40px;
  position: relative;
  padding: $padding-medium $margin-app;
  border-bottom: 1px solid $color-mid-gray;
  font-family: $font-monospace;
  z-index: 1000;

  .CodeMirror {
    max-width: 800px;
    height: 32px + (2 * 4px);
    left: -$cm-padding;
    font-size: $font-size-large;
    line-height: 32px;
    color: $color-gray;

    .regex-decorator {
      color: $color-mid-gray;
    }
  }
}

.regex-editor-controls {
  height: 32px;
  position: absolute;
  top: $padding-medium;
  right: $margin-app;
  bottom: $padding-medium;
  margin: 4px 0;

  .action {
    display: inline-block;
    margin-right: $padding-thin;
  }
}

.regex-editor-status {
  min-width: 120px;
  display: inline-block;
  padding: 6px $padding-medium;
  line-height: 20px;
  background-color: $color-light-gray;
  color: $color-gray;
  text-align: center;
  border-radius: $border-radius;
  vertical-align: top;

  &[data-error="true"] {
    background-color: $color-red;
    color: white
  }
}

.fix-modal {
  min-width: 360px;
  position: absolute;
  top: 36px + (2 * $padding-medium) + $padding-thick;
  left: $padding-thick;
  box-shadow: 0 0 $shadow-blur $color-mid-gray;
  z-index: 2000;

  .triangle {
    $triangle-size: 24px;
    width: $triangle-size;
    height: $triangle-size;
    position: absolute;
    top: -($triangle-size / 2);
    left: -($triangle-size / 2) + 48px;
    background-color: $color-light-gray;
    box-shadow: 0 0 $shadow-blur $color-mid-gray;
    transform: rotate(45deg);
  }

  .header {
    position: relative;
    background-color: $color-light-gray;
    padding: $padding-thick;
    font-size: $font-size-large;
    z-index: 100;

    .regex {
      height: 32px;
      margin: 0;
      margin-right: (2 * $button-size) + $padding-thin + $padding-medium;
      padding: 0;
      line-height: 32px;
      color: $color-gray;
    }

    .action {
      position: absolute;
      top: $padding-thick;

      @for $i from 1 through 2 {
        &:nth-of-type(#{$i}) {
          right: (($i - 1) * ($button-size + $padding-thin)) + $padding-thick;
        }
      }
    }
  }
}

.corpus-editor {
  position: absolute;
  top: 73px + $padding-thick;
  right: 0;
  bottom: 0;
  left: $margin-app;
  font-size: $font-size-large;

  .CodeMirror {
    height: auto;
    background-color: transparent;

    .CodeMirror-lines {
      padding: 0;
    }

    .marked-highlight {
      // background-color: silver;
    }
  }
}

.corpus-editor-overlay {
  width: 0;
  height: 0;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 500;

  .popover {
    width: $button-size;
    height: $button-size;
    position: absolute;
    padding-top: 12px;
  }

  .grip {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: gray;
    position: absolute;
    cursor: -webkit-grab;
  }
}

.corpus-editor-underlay {
  width: 0;
  height: 0;
  position: absolute;
  top: 0;
  left: 0;

  .canvas {
    // ...
  }
}
